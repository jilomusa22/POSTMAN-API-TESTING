{
	"info": {
		"_postman_id": "a21e601c-c6e7-4c99-b21b-b9c7b11ba0c0",
		"name": "REST API-STUDENT PROJECT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5040522",
		"_collection_link": "https://www.postman.com/kiranmm/workspace/isha-kiran/collection/5040522-a21e601c-c6e7-4c99-b21b-b9c7b11ba0c0?action=share&source=collection_link&creator=5040522"
	},
	"item": [
		{
			"name": "POSITIVE TC",
			"item": [
				{
					"name": "GET ALL STUDENTS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is valid\", function () {\r",
									"   // pm.expect(pm.response.text()).to.include(\"status\");\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"middle_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"date_of_birth\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if JSON response body is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[1].first_name).to.eql(\"Dipika Telang\");\r",
									"    pm.expect(jsonData[1].date_of_birth).to.eql(\"03-10-2000\");\r",
									"});\r",
									"\r",
									"pm.test.skip(\"Verify if response body contains Amrutha\", function () {\r",
									"   // pm.expect(pm.response.text()).to.include(\"status\");\r",
									"    pm.expect(pm.response.text()).to.include(\"Amurtha\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET SINGLE STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"status\");\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"middle_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"date_of_birth\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if status=true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"true\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body JSON values are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.first_name).to.eql(\"HELLO\");\r",
									"    pm.expect(jsonData.data.middle_name).to.eql(\"A\");\r",
									"    pm.expect(jsonData.data.last_name).to.eql(\"TestingWorld\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails/8348024",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails",
								"8348024"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE A STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=Created\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Kiran\",\r\n  \"middle_name\": \"Trainer\",\r\n  \"last_name\": \"G\",\r\n  \"date_of_birth\": \"03-10-2001\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"8342428\",\r\n \"first_name\": \"BHARATH\",\r\n  \"middle_name\": \"Dr.\",\r\n  \"last_name\": \"KUMAR\",\r\n  \"date_of_birth\": \"03-10-2000\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails/8342428",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails",
								"8342428"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails/8348049",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails",
								"8348049"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PERFORMANCE TESTS",
			"item": [
				{
					"name": "GET ALL STUDENTS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is valid\", function () {\r",
									"   // pm.expect(pm.response.text()).to.include(\"status\");\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"middle_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"date_of_birth\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if JSON response body is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[1].first_name).to.eql(\"Dipika Telang\");\r",
									"    pm.expect(jsonData[1].date_of_birth).to.eql(\"03-10-2000\");\r",
									"});\r",
									"\r",
									"pm.test.skip(\"Verify if response body contains Amrutha\", function () {\r",
									"   // pm.expect(pm.response.text()).to.include(\"status\");\r",
									"    pm.expect(pm.response.text()).to.include(\"Amurtha\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET SINGLE STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"status\");\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"middle_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"date_of_birth\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if status=true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"true\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body JSON values are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.first_name).to.eql(\"HELLO\");\r",
									"    pm.expect(jsonData.data.middle_name).to.eql(\"A\");\r",
									"    pm.expect(jsonData.data.last_name).to.eql(\"TestingWorld\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails/{{$randomInt}}",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails",
								"{{$randomInt}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE A STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=Created\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"{{$randomFirstName}}\",\r\n  \"middle_name\": \"{{$randomNamePrefix}}\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"date_of_birth\": \"{{$randomDatePast}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"8348664\",\r\n  \"first_name\": \"{{$randomFirstName}}\",\r\n  \"middle_name\": \"{{$randomNamePrefix}}\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"date_of_birth\": \"{{$randomDatePast}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails/8348664",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails",
								"8348664"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails/{{$randomInt}}",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails",
								"{{$randomInt}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NEGATIVE TC",
			"item": []
		},
		{
			"name": "DDT-FUNCTIONS",
			"item": [
				{
					"name": "CREATE A STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// here is where we can write automation java scripts  - ASSERTIONS\r",
									"\r",
									"pm.test(\"Verify if response code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description=Created\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time <= 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received from server\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response headers don't reveal sensitive/confidential project data\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"    pm.response.to.not.have.header(\"X-AspNet-Version\");\r",
									"    pm.response.to.not.have.header(\"X-Powered-By-Plesk\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"{{$randomFirstName}}\",\r\n  \"middle_name\": \"{{$randomNameSuffix}}\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"date_of_birth\": \"{{$randomDatePast}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thetestingworldapi.com/api/studentsDetails",
							"protocol": "https",
							"host": [
								"thetestingworldapi",
								"com"
							],
							"path": [
								"api",
								"studentsDetails"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}